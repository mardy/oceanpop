name: Build

on:
  push:

jobs:
  Ubuntu:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libjsoncpp-dev
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release .
          make
          strip --strip-unneeded match-theory
      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: match-theory-ubuntu
          path: |
            match-theory
            assets
            LICENSE
            README.md
      - name: Extract tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Create pre-release
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          files: match-theory-ubuntu.zip
          prerelease: true
          name: "Development build"
          tag_name: "latest"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: match-theory-ubuntu.zip
          tag_name: ${{ steps.tag.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Windows:
    runs-on: windows-latest

    steps:
      - name: Install dependencies
        run: |
          vcpkg install --triplet x64-windows sdl2 sdl2-image[libjpeg-turbo] sdl2-ttf sdl2-mixer[mpg123] jsoncpp
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -D-DVCPKG_TARGET_TRIPLET=x64-windows -A x64 .
          cmake --build . --config Release
      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: match-theory-windows
          path: |
            Release
            LICENSE
            README.md
      - name: Extract tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Create pre-release
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          files: match-theory-windows.zip
          prerelease: true
          name: "Development build"
          tag_name: "latest"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: match-theory-windows.zip
          tag_name: ${{ steps.tag.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  PSP:
    runs-on: ubuntu-latest
    container: pspdev/pspdev:latest

    steps:
      - name: Install dependencies
        run: |
          apk add cmake gmp mpc1 mpfr4 make git
      - name: Build SDL
        run: |
          git clone https://github.com/libsdl-org/SDL.git
          cd SDL
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$PSPDEV/psp/share/pspdev.cmake -DCMAKE_INSTALL_PREFIX=$PSPDEV/psp ..
          make install
          cd ../..
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          mkdir match-theory
          cd match-theory
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$PSPDEV/psp/share/pspdev.cmake ..
          make
          cp ../LICENSE ./
          cp ../README.md ./
      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: match-theory-psp
          path: |
            match-theory/EBOOT.PBP
            match-theory/assets
            match-theory/LICENSE
            match-theory/README.md
      - name: Extract tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Create pre-release
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          files: match-theory-psp.zip
          prerelease: true
          name: "Development build"
          tag_name: "latest"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: match-theory-psp.zip
          tag_name: ${{ steps.tag.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Vita:
    runs-on: ubuntu-latest
    container: gnuton/vitasdk-docker:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          cmake -DCMAKE_TOOLCHAIN_FILE="${VITASDK}/share/vita.toolchain.cmake" .
          make
      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: match-theory-vita
          path: |
            match-theory.vpk
            LICENSE
            README.md
      - name: Extract tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Create pre-release
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          files: match-theory-vita.zip
          prerelease: true
          name: "Development build"
          tag_name: "latest"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: match-theory-vita.zip
          tag_name: ${{ steps.tag.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
